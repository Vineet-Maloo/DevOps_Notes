DOCKER SWARM

to work in the docker swarm (this is a 3 node cluster, 2 node and one manager)

1. docker swarm init (to initialize docker swarm)
   once you run this command, we get the outout as 
    docker swarm join -- token {someting}
2. docker node ls (to see how many nodes are listed in your manager)
3. now paste th docker swarm join command (from step 1 ), run this to the worker node you want to join
4. suppose you have lost the token command, then you can retrive it by the following command
  docker swarm join-token worker
5. to add master node - docker swarm join-token manager
6. How to remove a node from a cluster - docker swarm leave (this command should be run in the node)
7.  and to remove from the master use this below command - docker node rm -f <worker1>
8. both 6 and 7 command should be run to leave the node from the cluster.
9. docker node inspect workerr 1 (run this on master)
10. docker node promote worker1 worker2 (run this on master to promote the worker as master)
11. docker node demote worker1 worker2 (run this on mastrer to demote the master to worker)
12. docker node ls - to see the all the nodes in the cluster, this run only in the master.
13. watch docker container ls - this will give you the list of docker container every 2 seconds.


docker services:
Basically we are trying to say to docker orcastator that we need this service in this particular cluster.
1. docker service create alpine ping 192.0.0.1 (run this on master this is a master IP) - this will give you the service ID, this is a example of the ping command, basically we pass the command which we need to execute.
2. docker service ls - will give you the list of services
3. docker service inspect <service ID>
4. docker service logs
5. to create a replicas of the services we use -- docker services create -d -- replicas 4 alpine ping 192.0.0.1<basically the command you want to execute>
6. docker service ps <service ID>
7. to scale up or scale down the services we use the below command - docker services scale <service Id> = <number of replicas you want to change.>
8. ** Even in your node container when there is no container running, but when you try to access the application from that particular IP address of the node which is mapped to the port in the cluster, the application will work. This is because the port mapping is done to all the node in that particular cluster, so if you want to access tha applcation from any nodes in that particular port where your applcaiton is running , you will be seeing the applcation running.
9. Swarm Visualizer
10. if there is a requirement that if you have 10 nodes and you want your service to run in all the 10 nodes then we use -- docker service create mode=global ping 9.9.9.9. So even though if you create another node, your service will automatically run in that new node.

